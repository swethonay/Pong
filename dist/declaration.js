"use strict";Object.defineProperty(exports,"__esModule",{value:true});const canvas=exports.canvas=document.querySelector("canvas");const C=exports.C=canvas.getContext("2d");let width=exports.width=canvas.width;let height=exports.height=canvas.height;const limit=exports.limit=((n,min,max)=>Math.min(Math.max(n,min),max));const random=(min,max)=>max?Math.random()*(max-min)+min:Math.random()*(min*2)+-min;const props=exports.props={goal:10,winner:null};const ball=exports.ball={get x(){return width*this.ratio.x},get y(){return height*this.ratio.y},get dx(){return width*this.ratio.dx},get dy(){return height*this.ratio.dy},get r(){return Math.min(width,height)*this.ratio.r},reset(){this.ratio.x=this.ratio.y=.5;this.ratio.dx=random(this.ratio.max);this.ratio.dy=random(this.ratio.max);this.ratio.dx+=this.ratio.dx<0?-this.ratio.min:this.ratio.min;this.ratio.dy+=this.ratio.dy<0?-this.ratio.min:this.ratio.min},ratio:{x:.5,y:.5,dx:null,dy:null,r:.01,increase:5e-4,min:.0025,max:.005,traction:1e-4}};const paddle=exports.paddle={get x(){return width*this.ratio.x},get w(){return width*this.ratio.w},get h(){return height*this.ratio.h},get min(){return this.ratio.limit},get max(){return 1-this.ratio.limit-this.ratio.h},ratio:{x:.05,w:.015,h:.1,limit:.05}};const player=exports.player={get x(){return paddle.x},get y(){return height*this.ratio.y},get dy(){return this.y-height*this.ratio.py},direction:0,points:0,name:"Player 1",ratio:{y:(height-paddle.h)/2/height,py:(height-paddle.h)/2/height,speed:.025}};const bot=exports.bot={get x(){return width-paddle.x-paddle.w},get y(){return height*this.ratio.y},get dy(){return this.y-height*this.ratio.py},points:0,name:"Player 2",ratio:{y:(height-paddle.h)/2/height,py:(height-paddle.h)/2/height,dy:0,speed:.005,reaction:.05,friction:.75,change:.1,get terminal(){return player.ratio.speed+Math.abs(ball.dx)+Math.abs(ball.dy)}},move(){if(ball.dx<0&&ball.ratio.x<.5&&random(0,100)>90||ball.ratio.x>(width/2+random(this.ratio.reaction)*width)/width||ball.dx>0&&random(0,100)>75){if(ball.y<this.y){this.ratio.dy-=this.ratio.speed}else if(ball.y>this.y+paddle.h){this.ratio.dy+=this.ratio.speed}else{this.ratio.dy*=this.ratio.friction}this.ratio.dy+=this.ratio.dy*random(this.ratio.change)}else{this.ratio.dy*=this.ratio.friction}}};const collides=exports.collides=((x,y)=>{return x-ball.r<player.x+paddle.w&&x+ball.r>player.x&&y-ball.r<player.y+paddle.h&&y+ball.r>player.y||x-ball.r<bot.x+paddle.w&&x+ball.r>bot.x&&y-ball.r<bot.y+paddle.h&&y+ball.r>bot.y});const keydown=exports.keydown=(E=>{if(E.code==="Space"){player.points=bot.points=0;props.winner=null;ball.reset()}else{player.direction=E.code==="KeyW"||E.code==="ArrowUp"?-1:E.code==="KeyS"||E.code==="ArrowDown"?1:player.direction}});const init=exports.init=(()=>{canvas.width=innerWidth;canvas.height=innerHeight;({width:width,height:height}=canvas);exports.height=height;exports.width=width;C.fillStyle=C.strokeStyle="white";C.textAlign="center";C.textBaseline="middle"});